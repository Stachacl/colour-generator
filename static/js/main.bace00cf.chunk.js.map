{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","rgb","weight","index","useState","alert","setAlert","bcg","join","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","console","log","type","value","onChange","target","placeholder","map","key","hexColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAqB,GAAdD,EAAIE,OAAc,IAAMF,EAAMA,EAOxBG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,IC8BvDC,EAjCK,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAAY,EACnBC,oBAAS,GADU,mBACtCC,EADsC,KAC/BC,EAD+B,KAEvCC,EAAMN,EAAIO,KAAK,KACff,EAAMG,EAAQ,WAAR,cAAYK,IAQxB,OAPAQ,qBAAW,WACT,IAAMC,EAAUC,YAAW,WACzBL,GAAS,KACR,KACH,OAAO,kBAAMM,aAAaF,MACzB,CAACL,IAGJ,6BAASQ,UAAS,gBAAWV,EAAQ,IAAM,eAC1CW,MAAO,CAACC,gBAAgB,OAAD,OAAQR,EAAR,MACvBS,QAAS,WACRV,GAAS,GACTW,UAAUC,UAAUC,UAAU1B,KAG7B,uBAAGoB,UAAU,iBACXX,EADF,KAGA,uBAAGW,UAAU,eACXpB,GAEDY,GAAS,uBAAGQ,UAAU,SAAb,yB,gBCqBAO,MA5Cf,WAAgB,IAAD,EACahB,mBAAS,IADtB,mBACNiB,EADM,KACCC,EADD,OAEalB,oBAAS,GAFtB,mBAENmB,EAFM,KAECC,EAFD,OAGWpB,mBAAS,IAAIqB,IAAO,WAAWC,IAAI,KAH9C,mBAGNC,EAHM,KAGAC,EAHA,KAgBb,OACE,oCACA,6BAASf,UAAU,aACjB,wDACA,0BAAMgB,SAfW,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIP,IAAQJ,GAAOK,IAAI,IACpCE,EAASI,GACT,MAAOT,GACPC,GAAS,GACTS,QAAQC,IAAKX,MASX,2BAAOY,KAAK,OACZC,MAAOf,EACPgB,SAAU,SAACP,GAAD,OAAOR,EAASQ,EAAEQ,OAAOF,QACnCvB,UAAS,UAAKU,EAAO,QAAS,MAC9BgB,YAAY,YAEZ,4BAAQ1B,UAAU,MAAMsB,KAAK,UAA7B,gBAIJ,6BAAStB,UAAU,UAChBc,EAAKa,KAAI,SAACnB,EAAMlB,GACf,OAAO,kBAAC,EAAD,eACPsC,IAAKtC,GACDkB,EAFG,CAGPlB,MAAOA,EAAOuC,SAAUrB,EAAM5B,aCpCtCkD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.bace00cf.chunk.js","sourcesContent":["function componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? '0' + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport default rgbToHex;\n//this whole function was found o stack owerflow website//","import React, { useState, useEffect } from 'react'\nimport rgbToHex from './utils'\n\nconst SingleColor = ({rgb, weight, index }) => {\n  const [alert, setAlert] = useState(false);\n  const bcg = rgb.join(',') //every item will be separated by coma//\n  const hex = rgbToHex(...rgb) \n  useEffect (() => {\n    const timeout = setTimeout(() => {\n      setAlert(false)\n    }, 3000)\n    return () => clearTimeout(timeout)\n  }, [alert]) //to make the text disapear after 3 seconds//\n\n  return (\n  <article className={`color ${index > 10 && 'color-light'}`} \n   style={{backgroundColor:`rgb(${bcg})`}}\n   onClick={() => {\n    setAlert(true);\n    navigator.clipboard.writeText(hex)\n   }}\n   >\n     <p className='percent-value'>\n      {weight}%\n     </p>\n     <p className='color-value'>\n      {hex}\n     </p>\n     {alert && <p className='alert'>\n      copied to clipboard\n     </p>\n     }\n     </article>\n     )\n}\n\nexport default SingleColor\n","import React, { useState } from 'react'\nimport SingleColor from './SingleColor'\n\nimport Values from 'values.js'\n\nfunction App() {\n  const [color, setColor] = useState(''); \n  const [error, setError] = useState(false); //if user choose non existing colour//\n  const [list, setList] = useState(new Values('#EF5F6C').all(10)); // 10 - means 100%  is devided by 10, if we change to 20- it will be twice less blocks//\n\n  const handleSubmit = (e) => {\n    e.preventDefault ();\n    try {\n      let colors = new Values (color).all(10) //coppied this method from git hub - where the colour library is taken from//\n      setList (colors)\n    } catch (error) {\n      setError(true)\n      console.log (error);\n    }\n  }\n\n  return (\n    <> \n    <section className='container'>\n      <h3> colour shades generator</h3>\n      <form onSubmit={handleSubmit}>\n        <input type='text' \n        value={color} \n        onChange={(e) => setColor(e.target.value)}\n        className={`${error? 'error': null}`}\n        placeholder='#ef5f6c'\n        />\n        <button className='btn' type='submit'> Generate </button>\n      </form>\n    </section>\n\n    <section className='colors'>\n      {list.map((color,index) => {\n        return <SingleColor \n        key={index} \n        {...color} \n        index={index} hexColor={color.hex}/>\n      })}\n    </section>\n    </>\n  )\n \n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}